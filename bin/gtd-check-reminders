#!/bin/bash
# Get current date in s
# For each FILE in tasks/*/.remindme
#   if current date > cat FILE; then move to TODO; up status to HIGH
#   send email
#   remove .remindme file

# Update the local copy, email on error
git pull --rebase || (cd "${ROOT_FOLDER}/bin" && python mail.py --message "gtd-check-reminders on $(hostname) is broken")
# Get all the remindme files
for file in "${ROOT_FOLDER}/${TASKS_FOLDER}/"*/.remindme
do
	if [[ "$(date +%s)" -gt "$(cat "${file}")" ]]
	then
		# Extract the task number
		TASK_NO="$(echo "${file}" | sed 's/.*tasks.\([0-9]*\)\/.remindme/\1/')"
		# Ignore closed files
		if [[ -a "${ROOT_FOLDER}/${STATUS_FOLDER}/${CLOSED_STATUS}/${TASK_NO}" ]]
		then
			continue
		fi
		OVERDUE_ON="$(date -d "@$(cat "${file}")")"
		echo "${TASK_NO} overdue on ${OVERDUE_ON}"
		# Send email
		(
			cd "${ROOT_FOLDER}/bin" && python mail.py --message "Task no ${TASK_NO} overdue on ${OVERDUE_ON} - $(head -1 "${ROOT_FOLDER}/${TASKS_FOLDER}/${TASK_NO}/${NOTES_FILE}")"
		)
		# If there's a repeat, set reminder for the future
		if [[ -a "${ROOT_FOLDER}/${TASKS_FOLDER}/${TASK_NO}/.repeat" ]]
		then
			date -d "+$(cat "${ROOT_FOLDER}/${TASKS_FOLDER}/${TASK_NO}/.repeat") days" +%s > "${ROOT_FOLDER}/${TASKS_FOLDER}/${TASK_NO}/.remindme"
		else
			# Otherwise, delete the remindme file
			git rm "${ROOT_FOLDER}/${TASKS_FOLDER}/${TASK_NO}/.remindme"
		fi
		#Â Move task to todo
		${ROOT_FOLDER}/bin/gtd move-status "${TODO_STATUS}" "${TASK_NO}"
		git commit -am 'remindme update'
		git push
	else
		TASK_NO="$(echo "${file}" | sed 's/.*tasks.\([0-9]*\)\/.remindme/\1/')"
		echo "${TASK_NO} waiting until $(date -d "@$(cat "${file}")")"
	fi
done
