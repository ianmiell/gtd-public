#!/bin/bash
source ./gtd-call-check

function usage {
	echo ""
	echo "${ROOT_FOLDER}/bin/gtd move-status MOVE_TO_STATUS [TASKNO]"
	echo ""
	exit
}

# Process args
set +o nounset
MOVE_TO_STATUS="$(convert_to_shortname "${MOVE_TO_STATUS}")"
readonly MOVE_TO_STATUS

if [[ "${WORKING_TASK_NO}" == "" ]] && [[ "${3}" == "" ]]
then
	echo "Argument required to gtd-mv - task_no"
	usage
fi
readonly WORKING_TASK_NO="${3}"
# Check arg 3 is a number and task exists
assert_is_num "${WORKING_TASK_NO}"
if [[ ! -d "${ROOT_FOLDER}/${TASKS_FOLDER}/${WORKING_TASK_NO}" ]]
then
	echo "Task ${WORKING_TASK_NO} appears not to exist"
	usage
fi
set -o nounset

OLD_STATUS_LN=$(echo "${ROOT_FOLDER}/${STATUS_FOLDER}"/*/"${WORKING_TASK_NO}")
readonly OLD_STATUS_LN
# Extract the current status
OLD_STATUS=
[[ $(ls -d "${OLD_STATUS_LN}") =~ .*/([a-z_]+)/[0-9]+ ]] && readonly OLD_STATUS="${BASH_REMATCH[1]}"
if [[ ${OLD_STATUS} == "${MOVE_TO_STATUS}" ]]
then
	echo "Old status is the same as the new status"
	exit 1
else
	# If the current status == new status
	# find current status, mv it to new one
	(
	cd "${ROOT_FOLDER}/${STATUS_FOLDER}/${MOVE_TO_STATUS}" && ln -sf "../../${TASKS_FOLDER}/${WORKING_TASK_NO}" .
	rm -f "${OLD_STATUS_LN}"
	)
fi

# Commit and push
git add "${ROOT_FOLDER}"

gtd-check-consistent
